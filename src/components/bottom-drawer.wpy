<style lang="scss">
  @import "../styles/variables.scss";
  .bottom-drawer--outer{
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 100vh;
    z-index: 98;
  }
  .bottom-drawer--drawer{
    display: block;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    min-height: 100rpx;
    padding: 0;
    background-color: $white;
    color: $black;
    text-align:center;
    box-shadow:0 -10px 30px 0 rgba(0,0,0,0.1);
    transition: all 0.3s ease;
    z-index:99;
  }
  .drawer--item{
    padding: $default-padding;
    border-bottom: $section-border;
  }
</style>
<template>
  <view class="bottom-drawer--outer" style="visibility: {{isOpen ? 'visible' : 'hidden'}};" @tap="handleTapSheet" id="sheetmask">
  </view>
  <view class="bottom-drawer--drawer"
        style="transform:{{isOpen ? 'translate3d(0, 0, 0)' : 'translate3d(0, 110%, 0)'}};">
      <repeat for="{{items}}" key="index" item="item" index="index">
        <view class="drawer--item" @tap="handleItemTap" id="{{item.value}}">{{item.name}}</view>
      </repeat>
  </view>
</template>
<script>
  import wepy from 'wepy'
  export default class Flash extends wepy.component {
    props = {
      items: {
        type: Object,
        default: [{name: '1', value: '1'}]
      }
    }
    data = {
      isOpen: false
    }
    methods = {
      showDrawer () {
        this.isOpen = true
        this.$apply()
      },
      hideDrawer () {
        this.isOpen = false
        this.$apply()
      },
      handleItemTap ({target}) {
        this.$emit('itemtap', target.id)
      },
      handleTapSheet (e) {
        const isTarget = e.target.id === 'sheetmask'
        if (isTarget) {
          this.isOpen = false
        }
      }
    }
  }
</script>
