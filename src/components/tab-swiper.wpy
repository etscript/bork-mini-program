<style lang="scss">
  @import "../styles/variables.scss";
  .tabswiper{
    box-sizing: border-box;
    width:100%;
    overflow:auto;
    height: unset;
  }
  .tabswiper--tabs {
    display: flex;
    align-items: center;
    justify-content: space-around;
    padding: 20rpx $default-padding;
    height:50px;
    width:100%;
    // flex-grow: 0;
  }
  .tabswiper--tab{
    font-size: $font-medium-title;
    position: relative;
    padding: 10rpx;
    transition: all 0.3s ease;
    &:after{
      content: '';
      width: 0;
      opacity: 0;
      left: 50%;
      bottom: 0;
      background-color: $color-primary;
      height: 4rpx;
      transition: all 0.3s ease;
      position: absolute;
    }
  }
  .tabswiper--tab.active {
    &:after{
      width: 100%;
      left: 0;
      opacity: 1;
    }
  }
</style>
<template>
  <view class="tabswiper--tabs">
    <repeat for="{{tabs}}" item="tab" index="index" key="index">
      <view class="tabswiper--tab {{tab.name === activetab ? 'active' : ''}}"
            data-tab="{{tab.name}}"
            @tap="handleTabTap">{{tab.t}}</view>
    </repeat>
  </view>
  <swiper @change="handleChange"
          current="{{tabIndex}}"
          class="tabswiper"
          style="height: {{calcHeight}}px;"
          duration="200">
    <slot></slot>
  </swiper>
</template>
<script>
  import wepy from 'wepy'

  export default class TabSwiper extends wepy.component {
    props = {
      tabs: {
        type: Array
      },
      activetab: {
        type: String,
        twoWay: true
      }
    }

    methods = {
      handleChange ({detail}) {
        this.activetab = this.tabs[detail.current].name
      },
      handleTabTap ({target}) {
        this.activetab = target.dataset.tab
      }
    }

    data = {
      calcHeight: 100
    }

    computed = {
      tabIndex () {
        return this.tabs.findIndex(tab => tab.name === this.activetab)
      }
    }
    onLoad () {
      const screenHeight = wx.getSystemInfoSync().windowHeight
      this.calcHeight = screenHeight - 175
    }
  }
</script>
