<style lang="scss">
@import "../styles/variables.scss";
.sideslider--outer{
  width: 100%;
  z-index: 99;
  height:100vh;
  position:fixed;
  top:0;
  bottom:0;
  left:0;
  right:0;
  box-sizing: border-box;
  overflow: hidden;
}
.sideslider--mask{
  height: 100%;
  background-color: rgba($purpley, 0.5);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
.sideslider--sheet{
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width:65%;
  background-color: #fff;
  padding: $default-padding;
  padding-bottom:0;
  box-sizing: border-box;
  box-shadow: 10px 10px 30px 0 rgba(0,0,0,0.1);
}
.sideslider--inner{
  position: relative;
  width: 100%;
  z-index: 99;
  padding-top:10px;
  height:100%;
}
#sideslider-close{
  position: absolute;
  bottom:0px;
  right:-40px;
  background-color: $white;
  padding: 2px;
  z-index:99;
  width:60rpx;
  height:60rpx;
}
</style>
<template>
  <view class="sideslider--outer"
        style="visibility: {{isopen ? 'visible' : 'hidden'}};"
        catchtouchmove="handleTouch"
        catchtouchend="handleTouchEnd"
        id="sheetmaster"
        @tap="handleTapSheet">
    <view class="sideslider--mask" id="sheetmask"></view>
    <view class="sideslider--sheet"
          style="transform:{{translate}}; transition:{{transition}};">
      <view class="sideslider--inner">
        <image class="icon--default" src="../icons/close.svg" @tap="handleTapBtn" id="sideslider-close"/>
        <slot></slot>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  export default class SideSlider extends wepy.component {
    props = {
      isopen: {
        type: Boolean,
        default: false,
        twoWay: true
      }
    }

    data = {
      translate: 'translate3d(-100%,0,0)',
      screenWidth: 0,
      transition: 'all 0.2s ease',
      issliding: false
    }
    watch = {
      isopen (oldVal, newVal) {
        this.translate = this.isopen ? 'translate3d(0%,0,0)' : 'translate3d(-100%,0,0)'
        this.$apply()
      },
      issliding () {
        if (this.issliding) {
          this.transition = 'none'
        } else {
          this.translate = this.isopen ? 'translate3d(0%,0,0)' : 'translate3d(-100%,0,0)'
        }
        this.$apply()
      }
    }

    methods = {
      handleTapSheet (e) {
        const isTarget = e.target.id === 'sheetmask'
        if (isTarget) {
          this.$emit('tapsheet', null)
        }
      },
      handleTapBtn (e) {
        this.$emit('tapsheet', null)
      },
      handleTouch ({currentTarget, touches}) {
        // start altering when touch spot is < 65% of screen
        this.transition = 'none'
        this.issliding = true
        this.$apply()
        const touchXRatio = touches[0].clientX / this.screenWidth
        if (touchXRatio <= 0.65) {
          const offset = parseFloat((touchXRatio * 100).toFixed(2)) - 65
          this.translate = `translate3d(${offset}%,0,0)`
          this.$apply()
        } else {
          this.translate = 'translate3d(0%,0,0)'
          this.$apply()
        }
        // close the slider if it is below 10% of the left side of screen
        if (touchXRatio <= 0.1) {
          this.isopen = false
          this.$apply()
        }
      },
      handleTouchEnd ({changedTouches}) {
        const touchXRatio = changedTouches[0].clientX / this.screenWidth
        this.transition = 'all 0.3s ease'
        this.issliding = false
        this.isopen = touchXRatio > 0.1
        this.$apply()
      }
    }

    async onLoad () {
      try {
        const {windowWidth} = await wepy.getSystemInfo()
        this.screenWidth = windowWidth
        this.$apply()
      } catch (err) {
        console.error(err)
      }
    }
  }
</script>
