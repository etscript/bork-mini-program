<style lang="scss">
  @import "../styles/variables.scss";
  .smallmap--outer {
    width: 100%;
    height: 80rpx;
  }
  #map-center {
    z-index: 99999;
    display: block;
    position: fixed;
    top: 50vh;
    left: 50%;
    opacity: 1;
    width: 40px;
    height: 40px;
  }
  .bigmap--outer{
    height: 100vh;
    width: 100%;
    position: fixed;
    left: 0;
    z-index: 99;
    transition: all 0.4s ease;
  }
  .map-placeholder {
    background: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);
    color: $black;
    text-align: center;
    width: 100%;
    height: 80rpx;
    display:inline-block;
    vertical-align:middle;
  }
  .map-location {
    border-radius: 50%;
    position: fixed;
    bottom: 30px;
    right: 30px;
    box-shadow: $normal-shadow;
    z-index: 999;
    background-color: $white;
    width: 40px;
    height: 40px;
    opacity: 1;
    transition: all 0.3s ease;
  }

</style>
<template>
    <block wx:if="{{stickyMap}}">
      <view class="icon--location map-location" @tap="showMap" style="display: {{open ? 'none' : 'block'}};"></view>
    </block>
    <block wx:if="{{isPicker}}">
      <block wx:if="{{pointEmpty}}">
        <view class="map-placeholder" @tap="showPicker">{{chooseText}}</view>
      </block>
      <block wx:else>
        <view class="smallmap--outer" style="display: {{open ? 'none' : 'block'}}; top: {{open ? '0' : '-150vh'}};">
          <map id="smallmap"
                show-location
                style="width: 100%; height: 80rpx;"
                scale="12"
                markers="{{markers}}"
                latitude = "{{point.latitude}}"
                longitude = "{{point.longitude}}"
                @tap="showPicker"/>
        </view>
      </block>
    </block>
  <view class="bigmap--outer" style="top: {{open ? '0' : '-150vh'}};" wx:if="{{isFullMap}}">
    <map id="bigmap"
          show-location
          latitude = "{{point.latitude}}"
          longitude = "{{point.longitude}}"
          markers = "{{markers}}"
          style="width: 100%; height: 100vh;"
          scale="14"
          bindregionchange="handleMapChange"
          bindcontroltap="handleControlTap"
          bindmarkertap="handleMarkerTap"
          markers="{{markers}}"
          controls="{{controls}}"/>
  </view>
  <cover-view id="map-center"
              style="top: {{calcTop}}px; left: {{calcLeft}}px;"
              class="icon--location"
              wx:if="{{open}}"/>
</template>
<script>
  import wepy from 'wepy'
  import _isEmpty from 'lodash.isempty'

  export default class LocationSelector extends wepy.component {
    props = {
      stickyMap: {
        type: Boolean,
        default: true
      },
      point: {
        type: Object,
        twoWay: true
      },
      markers: {
        type: Array,
        default: []
      },
      isPicker: {
        type: Boolean,
        default: false
      },
      isFullMap: {
        type: Boolean,
        default: false
      },
      neighborhood: {
        type: String,
        twoWay: true
      }
    }

    data = {
      calcTop: 0,
      calcLeft: 0,
      open: false,
      chooseText: '点击选择坐标',
      mapCtx: {},
      controls: [{
        id: 1,
        clickable: true,
        iconPath: '../icons/close.png',
        position: {
          left: 20,
          top: 20,
          width: 30,
          height: 30
        }
      }]
    }

    watch = {}

    computed = {
      pointEmpty () {
        return _isEmpty(this.point)
      }
    }

    methods = {
      showMap () {
        this.open = true
        this.$apply()
      },
      hideMap () {
        this.open = false
        this.$apply()
      },
      handleControlTap ({controlId}) {
        if (controlId === 1) {
          this.open = false
          this.$apply()
        }
      },
      handleMarkerTap ({markerId}) {
        this.$emit('markertap', markerId)
      },
      handleMapChange (e) {
        if (e.type === 'end') {
          this.mapCtx.getCenterLocation({
            success: (res) => {
              this.point.latitude = res.latitude
              this.point.longitude = res.longitude
              this.$apply()
            }
          })
        }
      },
      showPicker () {
        this._showPicker()
      }
    }

    async _showPicker () {
      try {
        await this.$parent.$parent.globalData.user.requestLocation()
        const res = await wepy.chooseLocation()
        this.point.latitude = res.latitude
        this.point.longitude = res.longitude
        if (res.name && res.name !== '') {
          console.log(res.name)
          this.neighborhood = res.name
        }
        this.$apply()
      } catch (err) {
        console.error(err)
      }
    }

    async onLoad () {
      this.mapCtx = wx.createMapContext('bigmap')
      if (wepy.T.locale === 'en') {
        this.chooseText = '(tap to choose location)'
      }
      const {windowHeight, windowWidth} = await wepy.getSystemInfo()
      this.calcLeft = (windowWidth / 2) - 40
      this.calcTop = (windowHeight / 2) - 40
      this.$apply()
    }
  }
</script>
