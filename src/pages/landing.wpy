<style lang="scss">
@import "../styles/variables.scss";
.landing--profile {
  position: absolute;
  bottom: 40rpx;
  left: 40rpx;
}
.landing--banner {
  width: 120px;
  height: 120px;
}
.landing--register-btn {
  font-size: 30rpx;
  margin: 20rpx auto;
  max-width:200px;
  width:100%;
  display: block;
}
.sideslider--box {
  flex-wrap: wrap;
  padding:100rpx 0;
  min-height:unset;
  .sideslider-item {
    margin: 20rpx 0;
  }
  .icon--xs, .icon--edit {
    float: left;
    margin-top:15px;
  }
}
.sideslider--profile-info {
  padding-bottom: 30rpx;
  .profile--box{
    display: inline-block;
    vertical-align:middle;
    padding:0 10rpx;
    position: relative;
  }
}
.landing--bottom-box{
  position: absolute;
  bottom: 40rpx;
  left: 40rpx;
  .btn--blank{
    background-color: transparent;
    font-size: $font-small;
  }
}
.btn--change-view{
  width: 200px;
  margin: 0 auto;
  border: $chunky-border;
  border-radius: 0;
  font-size: $font-small;
  padding: 0;
  text-align: center;
  background-color: $white;
  color: $black;
  &:before, &:after{
    display: none;
  }
}
</style>
<template>
  <view class="container__flex">
    <view class="flex--item__vertical-center padbox--default">
      <image class="landing--banner" src="../icons/fido_logo_black.png" mode="aspectFit"></image>
      <view class="flex--parent__horizontal padbox--default">
        <button class="flex--item__half btn--default__medium" @tap="navToDogs">{{t.view_dogs}}</button>
        <button class="flex--item__half btn--default__medium" @tap="navToCats">{{t.view_cats}}</button>
      </view>
      <view class="padbox--default" wx:if="{{!isRegistered}}">
        <button class="btn--default" @tap="handleProfileBtn">{{t.cta_register}}</button>
      </view>
    </view>
    <image class="icon--default landing--profile" @tap="handleProfileBtn" src="../icons/burger.svg" mode="aspectFit"/>
    <languagetoggle />
  </view>
  <unregisteredmodal/>
  <block wx:if="{{isRegistered}}">
    <sideslider :isopen.sync="sideSliderOpen" @tapsheet.user="toggleSlider">
      <view class="sideslider--profile-info" @tap="navToProfile">
        <image class="avatar__small" src="{{userAttributes.avatarUrl}}" mode="aspectFit"></image>
        <view class="profile--box">
          <view class="name">{{userAttributes.nickName}}</view>
          <view class="role {{isRescuer ? 'role-rescuer' : ''}}">{{userRole}}</view>
        </view>
      </view>
      <block wx:if="{{isRescuerView}}">
        <button class="btn--change-view" @tap="changeView">
          <image class="icon--xs" src="../icons/switch.svg" mode="aspectFit"/>
          {{t.change_adopter_view}}
        </button>
        <view class="container sideslider--box">
            <button class="btn--blank sideslider-item" @tap="navToRescuer" id="requests">
              <image class="icon--xs" src="../icons/inbox.svg" mode="aspectFit"/>
              {{t.requests}}
            </button>
            <button class="btn--blank sideslider-item" @tap="navToRescuer" id="rescues">
              <image class="icon--xs" src="../icons/crown.svg" mode="aspectFit"/>
              {{t.my_rescues}}
            </button>
            <button class="btn--blank sideslider-item" @tap="createAnimal">
              <image class="icon--xs" src="../icons/hospital.svg" mode="aspectFit"/>
              {{t.add_animal}}
            </button>
          <button class="btn--blank sideslider-item" @tap="handleEdit">
            <view class="icon--edit"/>
            {{t.edit_profile}}
          </button>
        </view>
      </block>
      <block wx:else>
        <button class="btn--change-view" @tap="changeView" wx:if="{{isRescuer}}">
          <image class="icon--xs" src="../icons/switch.svg" mode="aspectFit"/>
          {{t.change_rescuer_view}}
        </button>
        <view class="container sideslider--box">
            <button class="btn--blank sideslider-item" @tap="navToAdopter" id="applications">
              <image class="icon--xs" src="../icons/send.svg" mode="aspectFit"/>
              {{t.my_applications}}
            </button>
            <button class="btn--blank sideslider-item" @tap="navToAdopter" id="likes">
              <image class="icon--xs" src="../icons/star.svg" mode="aspectFit"/>
              {{t.my_likes}}
            </button>
            <button class="btn--blank sideslider-item" @tap="handleEdit">
              <image class="icon--xs" src="../icons/edit.svg" mode="aspectFit"/>
              {{t.edit_profile}}
            </button>
        </view>
      </block>
      <view class="landing--bottom-box">
        <button wx:if="{{!isRescuer}}" class="btn--blank" @tap="showRescuerForm">{{t.become_rescuer}}</button>
        <button class="btn--blank">{{t.about}}</button>
        <button class="btn--blank" @tap="handleLogout">{{t.logout}}</button>
      </view>
    </sideslider>
    <fidoloader/>
  </block>
</template>

<script>
  import wepy from 'wepy'
  import UnregisteredModal from '@/components/unregistered-modal'
  import SideSlider from '@/components/sideslider'
  import LanguageToggle from '@/components/language-toggle'
  import FidoLoader from '@/components/fido-loader'
  import LocalesMixin from '@/mixins/localesmixin'
  import isEmpty from 'lodash.isempty'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '正在加载'
    }

    mixins = [LocalesMixin]

    components = {
      unregisteredmodal: UnregisteredModal,
      sideslider: SideSlider,
      languagetoggle: LanguageToggle,
      fidoloader: FidoLoader
    }

    data = {
      isRegistered: false,
      isRescuer: false,
      sideSliderOpen: false,
      pageName: 'landing',
      isRescuerView: false
    }

    computed = {
      userAttributes () {
        return this.$parent.globalData.user.attributes
      },
      userRole () {
        if (!isEmpty(this.t)) {
          return this.$parent.globalData.user.isRescuer ? this.t.rescuer : this.t.adopter
        }
        return false
      }
    }

    methods = {
      handleProfileBtn () {
        if (!this.isRegistered) {
          this.$invoke('unregisteredmodal', 'openModal', '')
        } else {
          this.sideSliderOpen = !this.sideSliderOpen
        }
      },
      navToDogs () {
        wepy.navigateTo({url: 'animals?type=dog'})
      },
      navToCats () {
        wepy.navigateTo({url: 'animals?type=cat'})
      },
      toggleSlider () {
        this.sideSliderOpen = !this.sideSliderOpen
        this.$apply()
      },
      navToRescueRegistration () {
        wepy.navigateTo({url: 'registration?target=rescuer'})
      },
      handleEdit () {
        console.log('fuckbra')
      },
      navToProfile () {
        console.log('nav to profile')
      },
      navToAdopter ({target}) {
        wepy.navigateTo({url: `adopter-home?tab=${target.id}`})
      },
      navToRescuer ({target}) {
        wepy.navigateTo({url: `rescuer-home?tab=${target.id}`})
      },
      changeView () {
        const newView = !this.isRescuerView
        wx.setStorageSync('is_rescuer_view', newView)
        this.isRescuerView = newView
        this.$apply()
      },
      showRescuerForm () {
        wepy.navigateTo({url: 'become-rescuer'})
      }
    }

    onLoad () {
      wepy.navigateTo({url: 'animal-profile?animal=5a7a8bec2f301e003650da89'})
      // wepy.navigateTo({url: 'edit-animal?id=5a7a8bec2f301e003650da89&edit=true'})
      // wepy.navigateTo({url: 'adopter-home?tab=applications'})
      // wepy.navigateTo({url: 'rescuer-home?tab=rescues'})
      // wepy.navigateTo({url: 'application-detail?id=5a86b14417d0090035385b14'})
      // wepy.navigateTo({url: 'application-detail?id=5a891186ac502e00329bb8ad'})
      wepy.setNavigationBarTitle({
        title: 'fido'
      })
      this.isRegistered = this.$parent.globalData.user.isRegistered
      this.isRescuer = this.$parent.globalData.user.isRescuer
      if (this.isRescuer) {
        const persistentRescView = wx.getStorageSync('is_rescuer_view')
        if (persistentRescView) {
          this.isRescuerView = persistentRescView
        }
      }
      this.$apply()
    }

    onUnload () {
      console.log('landing unload')
    }

    onHide () {
      this.sideSliderOpen = false
      this.$apply()
    }

    async createAnimal () {
      this.sideSliderOpen = false
      this.$invoke('fidoloader', 'showLoading', '')
      const animal = await this.$parent.globalData.user.createRescue()
      wepy.navigateTo({url: `edit-animal?id=${animal.id}&edit=false`})
      this.$invoke('fidoloader', 'hideLoading', '')
    }

    async handleLogout () {
      const result = await wepy.showModal({title: this.t.confirm_logout, showCancel: true})
      if (result.confirm) {
        await this.$parent.globalData.user.logOut()
        wepy.reLaunch({url: 'landing'})
      }
    }
  }
</script>
